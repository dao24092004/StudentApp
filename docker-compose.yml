version: "3.8"

services:
  db:
    image: postgres:15.0
    environment:
      POSTGRES_USER: studentApp
      POSTGRES_PASSWORD: 1234$
      POSTGRES_DB: student_db
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    command: >
      bash -c "docker-entrypoint.sh postgres & sleep 20 && psql -U studentApp -d postgres -c 'CREATE DATABASE test;' && psql -U studentApp -d postgres -c 'CREATE DATABASE sonar_db;'"
    networks:
      - truonghoc-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U studentApp"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - truonghoc-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/student_db
      - SPRING_DATASOURCE_USERNAME=studentApp
      - SPRING_DATASOURCE_PASSWORD=1234$
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    restart: unless-stopped
    networks:
      - truonghoc-network

  sonarqube:
    image: sonarqube:latest
    ports:
      - "9001:9000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar_db
      - SONAR_JDBC_USERNAME=studentApp
      - SONAR_JDBC_PASSWORD=1234$
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    restart: unless-stopped
    networks:
      - truonghoc-network

networks:
  truonghoc-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs: